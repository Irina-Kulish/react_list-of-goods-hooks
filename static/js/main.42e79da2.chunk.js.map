{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setReverse","isResetButtonVisible","currentGoods","goods","visibleGoods","sort","f1","f2","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","prevReverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAAuBF,GAAcF,IAAaL,EAASI,KAmB3DM,EAjDR,SACEC,EADF,GAGG,IADCN,EACF,EADEA,SAAUE,EACZ,EADYA,WAENK,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQV,GACN,KAAKL,EAASgB,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKf,EAASkB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAOnB,EAASI,SAGlBG,GACFK,EAAaQ,UAIfC,QAAQC,IAAIjB,EAAUE,GAEfK,EA0BcW,CACnBtB,EAAiB,CAAEI,WAAUE,eAG/B,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYrB,IAAaL,EAASgB,WAEpCW,QA7BgB,WACtBrB,EAAYN,EAASgB,WAuBjB,iCAUA,wBACES,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYrB,IAAaL,EAASkB,SAEpCS,QAnCc,WACpBrB,EAAYN,EAASkB,SA6BjB,4BAUA,wBACEO,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,YAAanB,IAEfoB,QApCU,WAChBnB,GAAW,SAACoB,GAAD,OAAkBA,MA8BzB,qBASCnB,GACC,wBACEkB,QA/CU,WAClBrB,EAAYN,EAASI,MACrBI,GAAW,IA8CHiB,KAAK,SACLD,UAAU,0BAHZ,sBAUJ,6BACE,6BACGd,EAAamB,KAAI,SAACC,GAAD,OAChB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cC9HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.42e79da2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((f1, f2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return f1.localeCompare(f2);\n      case SortType.LENGTH:\n        return f1.length - f2.length;\n      default:\n        return SortType.NONE;\n    }\n  });\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const isResetButtonVisible = isReversed || sortType !== SortType.NONE;\n\n  const getSortAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const getSortLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const getSortNone = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const getRevers = () => {\n    setReverse((prevReverse) => !prevReverse);\n  };\n\n  const currentGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={getSortAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={getSortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': !isReversed,\n          })}\n          onClick={getRevers}\n        >\n          Reverse\n        </button>\n        {isResetButtonVisible && (\n          <button\n            onClick={getSortNone}\n            type=\"button\"\n            className=\"button is-info is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n      <ul>\n        <ul>\n          {currentGoods.map((good) => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}